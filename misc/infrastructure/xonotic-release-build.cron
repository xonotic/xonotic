#!/bin/sh

if [ -z "$RELEASETYPE" ]; then
	export RELEASETYPE=autobuild
	#export RELEASETYPE=release
fi

case "$RELEASETYPE" in
	autobuild)
		RELEASETYPEDIR=
		RELEASETYPENAME="$RELEASETYPE"
		;;
	RC*)
		RELEASETYPEDIR="$RELEASETYPE/"
		RELEASETYPENAME="Release Candidate"
		;;
	*)
		RELEASETYPEDIR="$RELEASETYPE/"
		RELEASETYPENAME="$RELEASETYPE-like build"
		;;
esac

# is being run as cronjob, better set PATH
export PATH=/home/xonotic-build/ccache:/home/xonotic-build/bin:/usr/local/bin:/usr/bin:/bin:/usr/games

# TEST: use s2tc, high quality
#export dds_tool=s2tc

# Try crunch.
export CACHEDIR=$HOME/.xonotic-cached-converter-crunch
export dds_tool=crunch

# Build locally.
export HOSTS_THAT_ARE_MYSELF='xonotic-build-win32 xonotic-build-win64 xonotic-build-osx'
export HOSTS_THAT_ARE_SCHROOT='xonotic-build-linux64'

mepwd=$PWD
me=$0

if rm "$me.not-today" 2>/dev/null; then
	echo "No build today (not-today marker removed)!"
	exit 0
fi

set -ex

test -z "$RELEASETYPEDIR" && ssh autobuild-release-uploader@beta.xonotic.org '
	set -e;
	s0=`date -d "now - 30 days - 12 hours" +%s`;
	s00=`date -d "now - 60 days - 12 hours" +%s`;
	for X in * */*; do
		[ -f "$X" ] || continue;
		d=${X##*/};
		d=${d#Xonotic-};
		d=${d#gmqcc-};
		d=${d%%[-_.]*};
		[ x"$d" != x"latest" ] || continue;
		w=`date -d $d +%w`;
		s=`date -d $d +%s`;
		if [ "$w" -ne 0 -a "$w" -ne 6 -a "$s" -lt "$s0" -o "$s" -lt "$s00" ]; then
			rm -f "$X";
		fi;
	done
'

cd ~/xonotic-release-build
./all clean --reclone
# ./all checkout maint
./all checkout
./all each git checkout HEAD^0
# add all feature branches we want

# map branches that we include:
#   winners in the poll for upcoming CTF maps
#   maps near completion

#for b in \
#	origin/divVerent/selfbuildagain \
#; do
#	b=$b ./all each sh -c 'if git rev-parse $b >/dev/null 2>&1; then git merge $b; fi'
#done
./all update -N
./all each git restore-mtime --commit-time # adding --merge would be more correct but is slow and hits git limits
d0=`date +%Y%m%d`
d=$d0
i=1
while HEAD -C xonotic:g-23 http://beta.xonotic.org/autobuild/"$RELEASETYPEDIR""Xonotic-$d.zip"; do
	i=$(($i+1))
	d="$d0"_"$i"
done
RELEASEDATE=$d ./all release
sha512sum Xonotic-$d*.zip > Xonotic-$d.sha512
if [ -z "$RELEASETYPEDIR" ]; then
	sleep 1 # newer timestamps for correct file sort order in web gui
	for X in Xonotic-$d*.zip; do
		ln -snf "$X" "Xonotic-latest${X#Xonotic-$d}"
	done
	sha512sum Xonotic-latest*.zip > Xonotic-latest.sha512
fi
rsync -vaSHP Xonotic*.zip Xonotic*.sha512 autobuild-release-uploader@beta.xonotic.org:"$RELEASETYPEDIR"
if [ -z "$RELEASETYPEDIR" ]; then
	# Update one package at a time (to reduce temp space requirement), on all mirrors simultaneously
	rm -rf rsynctmp && mkdir rsynctmp && cd rsynctmp
	for suffix in '' -high -mappingsupport; do
		package="Xonotic$suffix"
		unzip ../Xonotic-"$d$suffix".zip
		[ "$package" != Xonotic ] && mv Xonotic "$package"
		# RELEASE TODO: remove this renaming well after 0.9 release, when autobuild users should all have the newer updater that always uses fuzzy matching.
		cd "$package"/data
		for X in *"$d"*; do
			pre=${X%$d*}
			post=${X##*$d}
			mv "$X" "$pre"rsync"$post"
		done
		cd ../..
		# END renaming RELEASE TODO
		while read firstword restoflineignored; do
			mirror=${firstword%%//*}
			[ -z $mirror ] && continue
			# if desired an extra word could be parsed from mirrors.txt to change /var/rsync
			# ports and usernames should be specified in .ssh/config
			rpath=/var/rsync/autobuild
			rsync -rtzlyhhS --delete-delay --executability --stats --link-dest="$rpath/$package" \
				"$package/" "$mirror:$rpath/.$package.new/" \
			&& ssh "$mirror" "
				set -e
				cd $rpath
				rm -rf .$package.old
				[ -e $package ] && mv $package .$package.old
				mv .$package.new $package
				rm -rf .$package.old
			" || echo "<font color=\"red\">Failed to update $package on rsync mirror $mirror</font>" | $IRCSPAM \
			&
		done < ../misc/tools/rsync-updater/mirrors.txt
		wait
		rm -rf "$package"
	done
	cd .. && rm -rf rsynctmp

	# also upload pipeline files for .gitlab-ci.yml in xonotic-data.pk3dir
	cp data/stormkeep-????????????????????????????????????????-????????????????????????????????????????.pk3 stormkeep.pk3
	cd data/xonotic-maps.pk3dir # need correct path inside pk3
		7z a -tzip -mx=9 ../../stormkeep.pk3 maps/stormkeep.mapinfo maps/stormkeep.waypoints*
	cd ../..
	PIPELINE_FILES="gmqcc/gmqcc Xonotic/xonotic-linux64-dedicated stormkeep.pk3"
	rsync -vSP $PIPELINE_FILES autobuild-release-uploader@beta.xonotic.org:../pipeline-bin/
	rm -f stormkeep.pk3
fi
echo "Finished a new $RELEASETYPENAME at http://beta.xonotic.org/autobuild/$RELEASETYPEDIR" | $IRCSPAM
cd
