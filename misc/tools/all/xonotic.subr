handled=true
case "$cmd" in
	update-maps)
		misc/tools/xonotic-map-compiler-autobuild download
		;;
	compile-map)
		if [ $# -eq 0 ] ; then
			msg "Usage: ./all compile-map mapname1 mapname2 mapname3"
			msg "For example: ./all compile-map dance xoylent"
		fi
		if ! [ -f "netradiant/build/q3map2" ] ; then
			msg "q3map2 needed! Building q3map2..."
			cmake -H'netradiant' -B'netradiant/build' -G'Unix Makefiles' -D'CMAKE_BUILD_TYPE=Release' -DBUILD_RADIANT=OFF -DDOWNLOAD_GAMEPACKS=OFF
			cmake --build 'netradiant/build' -- q3map2
		fi
		for mapfile in "$@"; do
			mapfile="data/xonotic-maps.pk3dir/maps/$mapfile.map"
			if [ ! -f "$mapfile" ] ; then
				msg "ERROR, $mapfile not found!"
			else
				verbose measure_time misc/tools/xonotic-map-compiler-optionsfile "$mapfile"
			fi
		done
		;;
	compile)
		cleand0=false
		cleandp=false
		cleanqcc=false
		cleanqc=false
		compiled0=
		debug=release  # when changing this default, change the description in the zsh autocompletion script
		if [ -z "$CC" ]; then
			export CC="gcc"
		fi
		while :; do
			case "$1" in
				-0)
					compiled0=true
					shift
					;;
				-1)
					compiled0=false
					shift
					;;
				-c)
					cleand0=true
					cleandp=true
					cleanqcc=true
					cleanqc=true
					shift
					;;
				-qc)
					cleanqc=true
					shift
					;;
				-d|-p|-r)
					case "$1" in
						-d)
							debug=debug
							;;
						-p)
							debug=profile
							;;
						-r)
							debug=release
							;;
					esac
					export CC="$CC -g"
					case "`$CC -dumpversion`" in
						[5-9]*|[1-9][0-9]*|4.[3-9]*|4.[1-9][0-9]*)
							# gcc 4.3 or higher
							# -march=native is broken < 4.3
							if $CC -mtune=native -march=native misc/tools/conftest.c -o conftest >/dev/null 2>&1; then
								export CC="$CC -mtune=native -march=native"
							fi
							;;
					esac
					if [ -n "$WE_HATE_OUR_USERS" ]; then
						export CC="$CC -fno-common"
					fi
					shift
					;;
				*)
					break
					;;
			esac
		done

		TARGETS="sv-$debug sdl-$debug"
		if [ x"`uname`" = x"Darwin" ]; then
			export CC="$CC -fno-reorder-blocks"
		fi

		if [ $# -gt 0 ] && [ x"$1" = x"" ]; then
			# if we give the command make the arg "", it will surely fail (invalid filename),
			# so better handle it as an empty client option
			BAD_TARGETS=" "
			shift
		elif [ -n "$1" ]; then
			BAD_TARGETS=
			TARGETS_SAVE=$TARGETS
			TARGETS=
			for X in $1; do
				case "$X" in
					sdl)
						TARGETS="$TARGETS sdl-$debug"
						;;
					dedicated)
						TARGETS="$TARGETS sv-$debug"
						;;
					*)
						BAD_TARGETS="$BAD_TARGETS $X"
						;;
				esac
			done
			if [ -n "$TARGETS" ]; then # at least a valid client
				shift
			else # no valid client, let's assume this option is not meant to be a client then
				TARGETS=$TARGETS_SAVE
				BAD_TARGETS=
			fi
		fi

		if [ -z "$MAKE" ]; then
			MAKE=make
		fi

		if [ -z "$MAKEFLAGS" ]; then
			ncpus=`getconf _NPROCESSORS_ONLN 2>/dev/null || getconf NPROCESSORS_ONLN 2>/dev/null || echo 1`
			if [ $ncpus -gt 1 ]; then
				MAKEFLAGS=-j$ncpus
			fi
			if [ -n "$WE_HATE_OUR_USERS" ]; then
				MAKEFLAGS="$MAKEFLAGS DP_MAKE_TARGET=mingw"
			fi
		elif echo $MAKEFLAGS | head -c1 | grep -qv -; then # MAKEFLAGS starts with a single letter option
			MAKEFLAGS=-$(echo $MAKEFLAGS)                  # echo here and above will trim whitespaces
		fi

		# workaround ARM issue in DP's makefile.inc
		case `uname -m` in
			x86_64|*86)
				;;
			*)
				MAKEFLAGS="$MAKEFLAGS CFLAGS_SSE= CFLAGS_SSE2="
				;;
		esac

		if ! verbose $CC misc/tools/conftest.c -o conftest; then
			msg ""
			msg "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
			msg "~~~~~~~~~~ COMPILER ~~~~~~~~~~"
			msg "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
			msg "~~~~~~~~~~~~~~_...._~~~~~~~~~~"
			msg "~~~~~~~~~~~,-'     \\\`-._~~~~~~"
			msg "~~~~~~~~~~/     --. ><  \\~~~~~"
			msg "~~~~~~~~~/      (*)> -<: \\~~~~"
			msg "~~~~~~~~~(     ^~-'  (*) )~~~~"
			msg "~~~~~~~~~\\        ^+-_/  |~~~~"
			msg "~~~~~~~~~~\\       {vvv}  |~~~~"
			msg "~~~~~~~~~~,\\    , {^^^},/~~~~~"
			msg "~~~~~~~~,/  \`---.....-'~~W~~~~"
			msg "~~~~~~,/   \\_____/_\\_W~~/~~~~~"
			msg "~~~~~/          /~~~\\__/~~~~~~"
			msg "~~~~/          /~~~~~~~~~~~~~~"
			msg "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
			msg "~~~~~~~ Y U NO COMPILE ~~~~~~~"
			msg "~~~~~~~~~~~~ CODE ~~~~~~~~~~~~"
			msg "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
			msg ""
			exit 1
		fi
		rm -f conftest

		verbose cd "$d0/d0_blind_id"
		if [ -z "$compiled0" ]; then
			# In doubt, compile.
			compiled0=true
		fi
		if $compiled0; then
			if ! [ -f Makefile ]; then
				verbose sh autogen.sh
				verbose ./configure
			fi
			if $cleand0; then
				verbose $MAKE $MAKEFLAGS distclean
				verbose sh autogen.sh
				verbose ./configure
			fi
			verbose $MAKE $MAKEFLAGS
		fi

		verbose cd "$d0/gmqcc"
		if $cleanqcc; then
			verbose $MAKE $MAKEFLAGS clean
		fi
		if [ -n "$WE_HATE_OUR_USERS" ]; then
			verbose $MAKE $MAKEFLAGS gmqcc.exe
		else
			verbose $MAKE $MAKEFLAGS gmqcc
		fi

		if [ -n "$MSYSTEM" ]; then
			DATAMAKE=mingw32-make
		else
			DATAMAKE=$MAKE
		fi
		verbose cd "$d0/data/xonotic-data.pk3dir"
		if $cleanqc; then
			verbose ${DATAMAKE} QCC="../../../../gmqcc/gmqcc" "$@" $MAKEFLAGS clean
		fi
		verbose ${DATAMAKE} QCC="../../../../gmqcc/gmqcc" "$@" $MAKEFLAGS
		# 4 levels up: data, xonotic-data, qcsrc, server

		verbose cd "$d0/darkplaces"
		if [ x"$BAD_TARGETS" = x" " ]; then
			$ECHO "Warning: invalid empty client, default clients will be used."
		fi
		if $cleandp; then
			verbose $MAKE $MAKEFLAGS clean
		fi
		for T in $TARGETS; do
			verbose $MAKE $MAKEFLAGS STRIP=: "$@" "$T"
		done
		for T in $BAD_TARGETS; do
			$ECHO "Warning: discarded invalid client $T."
		done

		verbose "$SELF" update-maps
		;;
	run)
		if [ -n "$WE_HATE_OUR_USERS" ]; then
			case `uname -m` in
				x86_64)
					export PATH="$d0/misc/buildfiles/win64:$d0/d0_blind_id/.libs:$PATH"
					;;
				*)
					export PATH="$d0/misc/buildfiles/win32:$d0/d0_blind_id/.libs:$PATH"
					;;
			esac
		elif [ x"`uname`" = x"Darwin" ]; then
			export DYLD_LIBRARY_PATH="$d0/misc/buildfiles/osx/Xonotic.app/Contents/MacOS:$d0/d0_blind_id/.libs"
			export DYLD_FRAMEWORK_PATH="$d0/misc/buildfiles/osx/Xonotic.app/Contents/Frameworks"
		else
			export LD_LIBRARY_PATH="$d0/d0_blind_id/.libs${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"
		fi

		client=-sdl
		USE_RLWRAP=no
		case "$1" in
			dedicated)
				client=-$1
				USE_RLWRAP=
				shift
				;;
			sdl)
				shift
				;;
		esac

		if ! [ -x "darkplaces/darkplaces$client" ]; then
			if [ -x "darkplaces/darkplaces$client.exe" ]; then
				client=$client.exe
			else
				$ECHO "Client darkplaces/darkplaces$client not found, aborting"
				exit 1
			fi
		fi
		set -- "darkplaces/darkplaces$client" -xonotic "$@"

		binary=$1

		if [ x"$USE_GDB" = x"yes" ]; then
			set -- gdb --args "$@"
			USE_RLWRAP=no
		elif [ x"$USE_GDB" = x"core" ]; then
			set -- gdb --batch -x savecore.gdb --args "$@"
			USE_RLWRAP=no
		elif which catchsegv >/dev/null 2>&1; then
			set -- catchsegv "$@"
		fi
		if [ x"$USE_RLWRAP" != x"no" ] && which rlwrap >/dev/null 2>&1; then
			set -- rlwrap -A -g '^quit' -q "\"" -s 10000 -S ']' -w 100 "$@"
		fi
		rm -f xonotic.core
		verbose measure_time "$@" || true
		if [ -f xonotic.core ]; then
			if yesno "The program has CRASHED. Do you want to examine the core dump?"; then
				gdb "$binary" xonotic.core
			#elif yesno "You did not want to examine the core dump. Do you want to provide it - including your DarkPlaces checkout - to the Xonotic developers?"; then
			#	tar cvzf xonotic.core.tar.gz xonotic.core darkplaces/*.c darkplaces/*.h
			#	# somehow send it
			#	rm -f xonotic.core.tar.gz
			else
				$ECHO "The core dump can be examined later by"
				$ECHO "  gdb $binary xonotic.core"
			fi
			exit 1
		fi
		;;
	help)
		$ECHO "  $SELF compile [-c] [-qc] [-d|-p|-r] [-0] [-1] [sdl|dedicated]"
		$ECHO "  $SELF update-maps"
		$ECHO "  $SELF run [sdl|dedicated] options..."
		$ECHO "  $SELF compile-map mapname1 mapname2... (e.g. \"./all compile-map dance drain fuse\")"
		handled=false
		;;
	serverbench)
		# TODO(rpolzer): Why does :anticheat: output differ? Total game time differs? Why?
		trap "rm -rf .serverbench_temp" 0 1 2 3 11 13 15
		mkdir -p .serverbench_temp
		verbose "$SELF" run dedicated "$@" -noconfig -userdir .serverbench_temp +exec serverbench.cfg |\
			tee /dev/stderr |\
			grep '^:' |\
			grep -v '^:anticheat:' |\
			grep -v '^:gamestart:' |\
			grep -v '^:verbose:' |\
			md5sum
		;;
	*)
		handled=false
		;;
esac
